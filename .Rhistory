cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, color = UniqueCarrier)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier)
austin_airport['dep_time'] = as.integer(austin_airport$CRSDepTime / 100)
austin_airport['dep_time_period'] = ifelse(austin_airport$dep_time >=0 & austin_airport$dep_time < 12, 'Morning', ifelse(austin_airport$dep_time >= 12 & austin_airport$dep_time < 16, 'Afternoon', ifelse(austin_airport$dep_time >=14 & austin_airport$dep_time < 20, 'Evening', 'Night')))
austin_airport$dep_time = as.factor(austin_airport$dep_time)
austin_airport$dep_time_period = as.factor(austin_airport$dep_time_period)
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = count)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
coord_flip()  +
labs(title = "A Day's Airline Flight Cancellations") + xlab("Time of Day") + ylab("Percentage of Flights Cancelled")
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(avg = mean(DepDelay) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = avg)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
coord_flip()  +
labs(title = "A Day's Airline Flight Delays") + xlab("Time of Day") + ylab("Percentage of Flights Delayed")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = dep_time_period, y = count)) +
geom_bar(stat = 'identity') +
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights")
flip_origin_dest = transform(austin_airport, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin)) # simply changes all the origins to be austin; doesn't change the rest of the dataset
austin_unique = distinct(flip_origin_dest,Origin,Dest,.keep_all = T) # drops duplicates
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_unique, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = DepDelay)) +
#scale_color_brewer(palette = "YlOrRd")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
most_common = flip_origin_dest %>% count(Dest) # all of the common places to fly to/from
most_common = most_common[order(-most_common$n),]
austin_counts = merge(austin_unique, most_common, by = c("Dest","Dest"))
colnames(austin_counts)[colnames(austin_counts)=="n"] = "counts"
austin_counts
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_counts, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = counts)) +
#scale_color_brewer(palette = "YlOrRd")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count)) +
geom_bar(aes(color = identity),stat = 'identity') +
facet_wrap(~UniqueCarrier)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count)) +
geom_bar(aes(colour = identity),stat = 'identity') +
facet_wrap(~UniqueCarrier)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, color = DayOfWeek)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, fill = DayOfWeek)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, fill = DayOfWeek)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, fill = DayOfWeek)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "Dark2")
austin_airport['dep_time'] = as.integer(austin_airport$CRSDepTime / 100)
austin_airport['dep_time_period'] = ifelse(austin_airport$dep_time >=0 & austin_airport$dep_time < 12, 'Morning', ifelse(austin_airport$dep_time >= 12 & austin_airport$dep_time < 16, 'Afternoon', ifelse(austin_airport$dep_time >=14 & austin_airport$dep_time < 20, 'Evening', 'Night')))
austin_airport$dep_time = as.factor(austin_airport$dep_time)
austin_airport$dep_time_period = as.factor(austin_airport$dep_time_period)
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "Dark2")+
coord_flip()  +
labs(title = "A Day's Airline Flight Cancellations") + xlab("Time of Day") + ylab("Percentage of Flights Cancelled")
austin_airport['dep_time'] = as.integer(austin_airport$CRSDepTime / 100)
austin_airport['dep_time_period'] = ifelse(austin_airport$dep_time >=0 & austin_airport$dep_time < 12, 'Morning', ifelse(austin_airport$dep_time >= 12 & austin_airport$dep_time < 16, 'Afternoon', ifelse(austin_airport$dep_time >=14 & austin_airport$dep_time < 20, 'Evening', 'Night')))
austin_airport$dep_time = as.factor(austin_airport$dep_time)
austin_airport$dep_time_period = as.factor(austin_airport$dep_time_period)
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "RdGy")+
coord_flip()  +
labs(title = "A Day's Airline Flight Cancellations") + xlab("Time of Day") + ylab("Percentage of Flights Cancelled")
austin_airport['dep_time'] = as.integer(austin_airport$CRSDepTime / 100)
austin_airport['dep_time_period'] = ifelse(austin_airport$dep_time >=0 & austin_airport$dep_time < 12, 'Morning', ifelse(austin_airport$dep_time >= 12 & austin_airport$dep_time < 16, 'Afternoon', ifelse(austin_airport$dep_time >=14 & austin_airport$dep_time < 20, 'Evening', 'Night')))
austin_airport$dep_time = as.factor(austin_airport$dep_time)
austin_airport$dep_time_period = as.factor(austin_airport$dep_time_period)
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "Spectral")+
coord_flip()  +
labs(title = "A Day's Airline Flight Cancellations") + xlab("Time of Day") + ylab("Percentage of Flights Cancelled")
austin_airport['dep_time'] = as.integer(austin_airport$CRSDepTime / 100)
austin_airport['dep_time_period'] = ifelse(austin_airport$dep_time >=0 & austin_airport$dep_time < 12, 'Morning', ifelse(austin_airport$dep_time >= 12 & austin_airport$dep_time < 16, 'Afternoon', ifelse(austin_airport$dep_time >=14 & austin_airport$dep_time < 20, 'Evening', 'Night')))
austin_airport$dep_time = as.factor(austin_airport$dep_time)
austin_airport$dep_time_period = as.factor(austin_airport$dep_time_period)
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "RdYlBu")+
coord_flip()  +
labs(title = "A Day's Airline Flight Cancellations") + xlab("Time of Day") + ylab("Percentage of Flights Cancelled")
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(avg = mean(DepDelay) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = avg, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "Dark2") +
facet_wrap(~UniqueCarrier) +
coord_flip()  +
labs(title = "A Day's Airline Flight Delays") + xlab("Time of Day") + ylab("Percentage of Flights Delayed")
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(avg = mean(DepDelay) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = avg, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu") +
facet_wrap(~UniqueCarrier) +
coord_flip()  +
labs(title = "A Day's Airline Flight Delays") + xlab("Time of Day") + ylab("Percentage of Flights Delayed")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "Dark2")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights")
flip_origin_dest = transform(austin_airport, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin)) # simply changes all the origins to be austin; doesn't change the rest of the dataset
austin_unique = distinct(flip_origin_dest,Origin,Dest,.keep_all = T) # drops duplicates
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_unique, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = DepDelay)) +
scale_color_brewer(palette = "YlOrRd")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
flip_origin_dest = transform(austin_airport, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin)) # simply changes all the origins to be austin; doesn't change the rest of the dataset
austin_unique = distinct(flip_origin_dest,Origin,Dest,.keep_all = T) # drops duplicates
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_unique, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = DepDelay)) +
scale_color_gradient(low = "blue", high = "red")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
flip_origin_dest = transform(austin_airport, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin)) # simply changes all the origins to be austin; doesn't change the rest of the dataset
austin_unique = distinct(flip_origin_dest,Origin,Dest,.keep_all = T) # drops duplicates
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_unique, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = DepDelay)) +
scale_color_gradient(low = "darkblue", high = "red")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
flip_origin_dest = transform(austin_airport, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin)) # simply changes all the origins to be austin; doesn't change the rest of the dataset
austin_unique = distinct(flip_origin_dest,Origin,Dest,.keep_all = T) # drops duplicates
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_unique, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = DepDelay)) +
scale_color_gradient(low = "lightblue", high = "red")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
flip_origin_dest = transform(austin_airport, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin)) # simply changes all the origins to be austin; doesn't change the rest of the dataset
austin_unique = distinct(flip_origin_dest,Origin,Dest,.keep_all = T) # drops duplicates
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_unique, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = DepDelay)) +
scale_color_gradient(low = "blue", high = "red")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_counts, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = counts)) +
scale_color_gradient(low = "gray",high = "red")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_counts, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = counts)) +
scale_color_gradient(low = "gray",high = "black")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_counts, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = counts)) +
scale_color_gradient(low = "lightblue",high = "darkblue")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggrepel)
austin_airport = read.csv("ABIA.csv")
airport_codes = read.csv("airport-codes.csv")
us_airport_codes = subset(airport_codes, airport_codes$iso_country == 'US', select = c(iata_code, coordinates))
us_airport_codes = separate(us_airport_codes, coordinates, c("longitude", "latitude"), sep = ", ")
us_airport_codes$longitude = as.numeric(us_airport_codes$longitude)
us_airport_codes$latitude = as.numeric(us_airport_codes$latitude)
us_airport_codes$iata_code = as.character(us_airport_codes$iata_code)
us_airport_codes = us_airport_codes[!(is.na(us_airport_codes$iata_code) | us_airport_codes$iata_code == ""), ]
austin_airport = austin_airport[!(is.na(austin_airport$Origin) | austin_airport$Origin == ""), ]
austin_airport = austin_airport[!(is.na(austin_airport$Dest) | austin_airport$Dest == ""), ]
austin_airport$Origin = as.character(austin_airport$Origin)
austin_airport$Dest = as.character(austin_airport$Dest)
austin_airport$Month = as.factor(austin_airport$Month)
austin_airport$Cancelled = as.factor(austin_airport$Cancelled)
austin_airport$DayOfWeek = as.factor(austin_airport$DayOfWeek)
austin_airport <- merge(austin_airport, us_airport_codes, by.x="Dest", by.y="iata_code")
austin_airport <- merge(austin_airport, us_airport_codes, by.x="Origin", by.y="iata_code")
austin_airport['route'] = paste(austin_airport$Origin, " ", austin_airport$Dest)
austin_unique = distinct(austin_airport, route, .keep_all = TRUE)
route_counts = distinct(austin_airport %>% group_by(route, latitude.x, latitude.y, longitude.x, longitude.y) %>% summarise(count = n()))
top_10 = head(arrange(route_counts, desc(count)), 10)
austin_unique = transform(austin_unique, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin))
austin_unique = distinct(austin_unique,Origin,Dest,.keep_all = T)
flip_origin_dest = transform(austin_airport, Origin = ifelse(Dest != 'AUS', Origin, Dest), Dest = ifelse(Dest != 'AUS', Dest,Origin)) # simply changes all the origins to be austin; doesn't change the rest of the dataset
austin_unique = distinct(flip_origin_dest,Origin,Dest,.keep_all = T) # drops duplicates
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_unique, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = DepDelay)) +
scale_color_gradient(low = "blue", high = "red")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
usmap <- borders("usa")
ggplot() + usmap +
geom_curve(data = austin_counts, aes(x = latitude.x, y = longitude.x, xend = latitude.y, yend = longitude.y, colour = counts)) +
scale_color_gradient(low = "lightblue",high = "darkblue")+
#geom_point(data = us_airport_codes, aes(x = longitude, y = latitude), ) +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, fill = DayOfWeek)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "Dark2") +
labs(title = "A Day's Airline Flight Cancellations") + xlab("Time of Day") + ylab("Percentage of Flights Cancelled")
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, fill = DayOfWeek)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "Dark2") +
labs(title = "A Week of Airline Flight Cancellations") + xlab("Day of the Week") + ylab("Number of Flights Cancelled") +
theme(legend.title = element_blank())
cancelled_flights = austin_airport[austin_airport$Cancelled == 1,]
table(cancelled_flights$UniqueCarrier)
group = austin_airport %>%
group_by(DayOfWeek, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = DayOfWeek, y = count, fill = DayOfWeek)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "Dark2") +
labs(title = "A Week of Airline Flight Cancellations") + xlab("Day of the Week") + ylab("Number of Flights Cancelled") +
theme(legend.position = "none")
austin_airport['dep_time'] = as.integer(austin_airport$CRSDepTime / 100)
austin_airport['dep_time_period'] = ifelse(austin_airport$dep_time >=0 & austin_airport$dep_time < 12, 'Morning', ifelse(austin_airport$dep_time >= 12 & austin_airport$dep_time < 16, 'Afternoon', ifelse(austin_airport$dep_time >=14 & austin_airport$dep_time < 20, 'Evening', 'Night')))
austin_airport$dep_time = as.factor(austin_airport$dep_time)
austin_airport$dep_time_period = as.factor(austin_airport$dep_time_period)
group = austin_airport %>%
group_by(dep_time_period, UniqueCarrier)  %>%
summarize(count = sum(Cancelled == 1) / sum(UniqueCarrier == UniqueCarrier))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
facet_wrap(~UniqueCarrier) +
scale_fill_brewer(palette = "RdYlBu")+
coord_flip()  +
labs(title = "A Day's Airline Flight Cancellations") + xlab("Time of Day") + ylab("Percentage of Flights Cancelled") +
theme(legend.position = "none")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group, aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
View(group)
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group[group$CancellationCode != NaN], aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group[group$CancellationCode == 1], aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group[group$CancellationCode != NaN,], aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group[group$CancellationCode != NA,], aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
View(group)
View(group)
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group[,-c(1,5,9,13)], aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group[-c(1,5,9,13),], aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
group = austin_airport %>%
group_by(dep_time_period, CancellationCode)  %>%
summarize(count = sum(Cancelled == 1))
ggplot(data = group[-c(1,5,9,13),], aes(x = dep_time_period, y = count, fill = dep_time_period)) +
geom_bar(stat = 'identity') +
scale_fill_brewer(palette = "RdYlBu")+
facet_wrap(~CancellationCode) +
#coord_flip()  +
labs(title = "Cancellation Codes During the Day") + xlab("Time of Day") + ylab("Number of Cancelled Flights") +
theme(legend.position = "none")
