knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(mosaic)
library(tidyverse)
library(arules)
library(arulesViz)
groceries_df = read.delim("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", header = FALSE, sep = ",", na.strings = c("",NaN))
groceries = read.transactions("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", format = "basket", sep = ",")
#arules::inspect(rules)
arules::inspect(subset(rules, subset=lift > 3 & confidence > 0.2))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(mosaic)
library(tidyverse)
library(arules)
library(arulesViz)
groceries_df = read.delim("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", header = FALSE, sep = ",", na.strings = c("",NaN))
groceries = read.transactions("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", format = "basket", sep = ",")
head(groceries_df)
occurrences = sort(table(unlist(groceries_df)))
#plot(sort(occurrences), xlab = "items purchased", ylab = "occurrences")
df = as.data.frame(occurrences)
ggplot(df, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
rules = apriori(groceries,
parameter=list(support=.005, confidence=.1, maxlen=5, minlen = 2))
#arules::inspect(rules)
arules::inspect(subset(rules, subset=lift > 3 & confidence > 0.2))
# plot all the rules in (support, confidence) space
# notice that high lift rules tend to have low support
plot(rules)
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
View(occurrences)
occurrences[occurrences > 1250]
View(occurrences)
occurrences[occurrences$Freq > 1250]
occurrences[occurrences$Freq > 1250]
occurrences[occurrences$Freq > 1250, ]
occurrences[occurrences$Freq > 1250, Var1]
occurrences[occurrences$Freq > 1250, "Var1"]
kable(head(v_freq), format = "markdown")
knitr::kable(head(v_freq), format = "markdown")
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq), format = "markdown")
?as.data.frame
occurrences = as.data.frame(sort(table(unlist(groceries_df))), colnames = c("item","occurrences"))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
occurrences = as.data.frame(sort(table(unlist(groceries_df))), colnames = c("item","occurrences"))
ggplot(occurrences, aes(x=item, y=occurrences)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
View(occurrences)
occurrences = as.data.frame(sort(table(unlist(groceries_df))), col.names = c("item","occurrences"))
ggplot(occurrences, aes(x=item, y=occurrences)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
View(occurrences)
?sort
v_freq = sort(occurrences[occurrences$Freq > 1250,], decreasing = TRUE)
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq[order(-Freq)]), format = "markdown")
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq[order(-occurrences$Freq)]), format = "markdown")
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq[order(-occurrences$Freq),]), format = "markdown")
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq[order(occurrences$Freq),]), format = "markdown")
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq, format = "markdown")
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq), format = "markdown")
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq), format = "markdown", row.names = NA, col.names = c("Item","Occurrences"))
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq), format = "markdown", row.names = FALSE, col.names = c("Item","Occurrences"))
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(mosaic)
library(tidyverse)
library(knitr)
library(arules)
library(arulesViz)
groceries_df = read.delim("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", header = FALSE, sep = ",", na.strings = c("",NaN))
groceries = read.transactions("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", format = "basket", sep = ",")
kable(head(groceries_df), format = "markdown")
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq), format = "markdown", row.names = FALSE, col.names = c("Item","Occurrences"))
rules = apriori(groceries,
parameter=list(support=100/15000, confidence=.1, minlen = 2)
)
sub_rules = arules::inspect(subset(rules, subset=lift > 1 & confidence > 0.2))
# fix this
#sub_rules
kable(head(sub_rules,15), format = "markdown", row.names = FALSE)
View(sub_rules)
# fix this
#sub_rules
typeof(sub_rules)
# fix this
#sub_rules
x = as.data.frame(sub_rules)
# fix this
#sub_rules
x = as.data.frame(sub_rules)
type(x)
typeof(x)
# fix this
#sub_rules
x = data.frame(sub_rules)
typeof(x)
# fix this
#sub_rules
df = data.frame(matrix(unlist(sub_rules), nrow=len(sub_rules), byrow=T),stringsAsFactors=FALSE)
# fix this
#sub_rules
df = data.frame(matrix(unlist(sub_rules), nrow=length(sub_rules), byrow=T),stringsAsFactors=FALSE)
typeof(df)
typeof(v_freq)
# fix this
#sub_rules
df = data.frame(matrix(unlist(sub_rules), nrow=length(sub_rules), byrow=T))
# fix this
#sub_rules
kable(head(sub_rules,15), format = "markdown", row.names = FALSE)
rules = apriori(groceries,
parameter=list(support=100/15000, confidence=.1, minlen = 2)
)
sub_rules = arules::inspect(subset(rules, subset=lift > 1 & confidence > 0.2))
# fix this
#kable(head(sub_rules,15), format = "markdown", row.names = FALSE)
#head(sub_rules,15)
sub_rules
better_rules = subset(rules, subset=lift > 2.5 & confidence > .03 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
# fix this
kable(inspect(sub_rules), format = "markdown", row.names = FALSE)
# fix this
kable(arules::inspect(sub_rules), format = "markdown", row.names = FALSE)
rules = apriori(groceries,
parameter=list(support=100/15000, confidence=.1, minlen = 2)
)
sub_rules = subset(rules, subset=lift > 1 & confidence > 0.2)
# fix this
kable(arules::inspect(sub_rules), format = "markdown", row.names = FALSE)
# fix this
kable(arules::inspect(sub_rules)[:15], format = "markdown", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(mosaic)
library(tidyverse)
library(knitr)
library(arules)
library(arulesViz)
groceries_df = read.delim("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", header = FALSE, sep = ",", na.strings = c("",NaN))
groceries = read.transactions("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", format = "basket", sep = ",")
?apriori
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(mosaic)
library(tidyverse)
library(knitr)
library(arules)
library(arulesViz)
groceries_df = read.delim("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", header = FALSE, sep = ",", na.strings = c("",NaN))
groceries = read.transactions("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", format = "basket", sep = ",")
kable(head(groceries_df), format = "markdown")
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq), format = "markdown", row.names = FALSE, col.names = c("Item","Occurrences"))
rules = apriori(groceries,
parameter=list(support=100/15000, confidence=.1, minlen = 2, target = "maximally frequent itemsets")
)
?apriori
sub_rules = subset(rules, subset=lift > 1 & confidence > 0.2)
rules = apriori(groceries,
parameter=list(support=100/15000, confidence=.1, minlen = 2)
)
sub_rules = subset(rules, subset=lift > 1 & confidence > 0.2)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(mosaic)
library(tidyverse)
library(knitr)
library(arules)
library(arulesViz)
groceries_df = read.delim("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", header = FALSE, sep = ",", na.strings = c("",NaN))
groceries = read.transactions("https://raw.githubusercontent.com/jgscott/STA380/master/data/groceries.txt", format = "basket", sep = ",")
kable(head(groceries_df), format = "markdown")
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
v_freq = occurrences[occurrences$Freq > 1250,]
knitr::kable(head(v_freq), format = "markdown", row.names = FALSE, col.names = c("Item","Occurrences"))
rules = apriori(groceries,
parameter=list(support=100/15000, confidence=.1, minlen = 2)
)
sub_rules = subset(rules, subset=lift > 1 & confidence > 0.2)
# fix this
#kable(head(arules::inspect(sub_rules),15), format = "markdown", row.names = FALSE)
#arules::inspect(sub_rules)
plot(subset(rules, subset=lift > 1 & confidence > 0.2), measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 2.5 & confidence > .03 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
plot(subset(rules, subset=lift > 1 & confidence > 0.2), measure = c("support", "confidence"), shading = "lift", jitter = 0)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .04 & support > 1/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 2.5 & confidence > .04 & support > 1.2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 2.5 & confidence > .1 & support > 1.2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 2.5 & confidence > .4 & support > 1.2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 2.5 & confidence > .4 & support > 1/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .35 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 2.5 & confidence > .3 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 2.5 & confidence > .3 & support > 1.4/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 3 & confidence > .3 & support > 1/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .3 & support > 1.2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2 & confidence > .3 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2 & confidence > .3 & support > 2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 3 & confidence > .3 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 3 & confidence > .2 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2 & confidence > .3 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 3 & confidence > .3 & support > 1.5/150)
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 3 & confidence > .2 & support > 2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .2 & support > 2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .4 & support > 1.2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .35 & support > 1.2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .3 & support > 1.5/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2.5 & confidence > .1 & support > 3/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2 & confidence > .1 & support > 3/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 2 & confidence > .2 & support > 2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 4)#& confidence > .2 & support > 2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
better_rules = subset(rules, subset=lift > 3)#& confidence > .2 & support > 2/150)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
better_rules = subset(rules, subset=lift > 3 & confidence > 0.2)
plot(better_rules, measure = c("support", "confidence"), shading = "lift")
#kable(arules::inspect(better_rules), format = "markdown", row.names = FALSE)
arules::inspect(better_rules)
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
) +
theme_light()
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme_light(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
occurrences = as.data.frame(sort(table(unlist(groceries_df))))
ggplot(occurrences, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity') +
ggtitle("Frequency of Items in Groceries.txt") +
xlab("Purchased Item (Sorted)") +
ylab("Occurrences")+
theme(
axis.text.x = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
